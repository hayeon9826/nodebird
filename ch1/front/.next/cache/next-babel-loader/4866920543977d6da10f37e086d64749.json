{"ast":null,"code":"var _jsxFileName = \"/Users/hayeon/Desktop/programming_projects/react/react_nodebird/ch1/front/pages/signup.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from 'react';\nimport AppLayOut from '../components/AppLayOut';\nimport { Form, Input, Button, Checkbox } from 'antd';\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 8\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nconst Signup = () => {\n  const onFinish = values => {\n    console.log('Success:', values);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const {\n    0: id,\n    1: setId\n  } = useState('');\n  const {\n    0: nick,\n    1: setNick\n  } = useState('');\n\n  const onChangeId = () => {};\n\n  const onChangeNick = () => {};\n\n  const onChangePassword = () => {};\n\n  const onChangeRemember = () => {};\n\n  const onChangePasswordChk = () => {};\n\n  return __jsx(AppLayOut, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\", __jsx(Form, _extends({}, layout, {\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), __jsx(Form.Item, {\n    label: \"\\uC774\\uB984\",\n    name: \"username\",\n    rules: [{\n      required: true,\n      message: '이름을 입력하세요'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(Input, {\n    required: true,\n    onchange: onChangeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), __jsx(Form.Item, {\n    label: \"\\uB2C9\\uB124\\uC784\",\n    name: \"nickname\",\n    rules: [{\n      required: true,\n      message: '닉네임을 입력하세요'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(Input, {\n    required: true,\n    onchange: onChangeNick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), __jsx(Form.Item, {\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: '비밀번호를 입력하세요'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(Input.Password, {\n    required: true,\n    onchange: onChangePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), __jsx(Form.Item, {\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: '비밀번호를 다시 입력하세요'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(Input.Password, {\n    required: true,\n    onchange: onChangePasswordChk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), __jsx(Form.Item, _extends({}, tailLayout, {\n    name: \"remember\",\n    valuePropName: \"checked\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), __jsx(Checkbox, {\n    onChange: onChangeRemember,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Remember me\")), __jsx(Form.Item, _extends({}, tailLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Submit\")))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/hayeon/Desktop/programming_projects/react/react_nodebird/ch1/front/pages/signup.js"],"names":["React","useState","AppLayOut","Form","Input","Button","Checkbox","layout","labelCol","span","wrapperCol","tailLayout","offset","Signup","onFinish","values","console","log","onFinishFailed","errorInfo","id","setId","nick","setNick","onChangeId","onChangeNick","onChangePassword","onChangeRemember","onChangePasswordChk","remember","required","message"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport AppLayOut from '../components/AppLayOut';\nimport { Form, Input, Button, Checkbox } from 'antd';\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 8,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nconst Signup = () => {\n  const onFinish = values => {\n    console.log('Success:', values);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const [id, setId] = useState('');\n  const [nick, setNick] = useState('');\n\n  const onChangeId = () => {};\n  const onChangeNick = () => {};\n  const onChangePassword = () => {};\n  const onChangeRemember = () => {};\n  const onChangePasswordChk = () => {};\n\n  return (\n\n    <AppLayOut>\n      <div>\n        회원가입\n        <Form\n          {...layout}\n          name=\"basic\"\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n          <Form.Item\n            label=\"이름\"\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                message: '이름을 입력하세요',\n              },\n            ]}\n          >\n            <Input required onchange={onChangeId} />\n          </Form.Item>\n\n          <Form.Item\n            label=\"닉네임\"\n            name=\"nickname\"\n            rules={[\n              {\n                required: true,\n                message: '닉네임을 입력하세요',\n              },\n            ]}\n          >\n            <Input required onchange={onChangeNick}/>\n          </Form.Item>\n\n          <Form.Item\n            label=\"비밀번호\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: '비밀번호를 입력하세요',\n              },\n            ]}\n          >\n            <Input.Password required onchange={onChangePassword} />\n          </Form.Item>\n\n          <Form.Item\n            label=\"비밀번호 확인\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: '비밀번호를 다시 입력하세요',\n              },\n            ]}\n          >\n            <Input.Password required onchange={onChangePasswordChk} />\n          </Form.Item>\n\n          <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n            <Checkbox onChange={onChangeRemember}>Remember me</Checkbox>\n          </Form.Item>\n\n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </AppLayOut>\n  )\n}\n\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}